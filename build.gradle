plugins {
    id 'java'
    id 'io.github.goooler.shadow' version "8.1.8"
}

group = 'de.mcterranova.deathpot'
version = '1.0-SNAPSHOT'

def envProperties = new Properties()
def envPropertiesFile = file('private.env')
envPropertiesFile.withReader('UTF-8') { reader ->
    envProperties.load(reader)
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "github"
        url = "https://maven.pkg.github.com/TerraNova-Devs/TerranovaLib"
        credentials {
            username = project.findProperty("gpr.user")
            password = project.findProperty("gpr.token")
        }
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    implementation 'com.jeff-media:MorePersistentDataTypes:2.4.0'
    implementation 'de.mcterranova:terranova-lib:0.6.6'
    implementation fileTree(dir: 'jars', include: ['*.jar'])
}

shadowJar{
    destinationDirectory.set(file("./testserver/plugins"))
}
def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.named("build") { dependsOn(tasks.named("shadowJar")) }

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
